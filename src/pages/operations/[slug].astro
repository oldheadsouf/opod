---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

// Generate static paths for all operations
export async function getStaticPaths() {
  const operations = await getCollection('operations');
  return operations.map((operation) => ({
    params: { slug: operation.slug },
    props: { operation },
  }));
}

interface Props {
  operation: CollectionEntry<'operations'>;
}

const { operation } = Astro.props;
const { Content } = await operation.render();

// Format date helper
const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};
---

<BaseLayout
  title={`${operation.data.title} - OPOD`}
  description={operation.data.description}
>
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-12 sm:py-16 lg:py-20">

    <!-- Back Navigation -->
    <nav class="mb-8">
      <a
        href="/operations"
        class="inline-flex items-center text-cyan hover:text-cyan-bright transition-colors text-sm"
      >
        <svg
          class="w-4 h-4 mr-2"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M15 19l-7-7 7-7"
          />
        </svg>
        Back to Field Operations
      </a>
    </nav>

    <!-- Article Header -->
    <header class="mb-12">
      <h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-white mb-4 leading-tight">
        {operation.data.title}
      </h1>

      <div class="flex flex-col sm:flex-row sm:items-center gap-4 mb-6">
        <time class="text-sm text-cyan-dim uppercase tracking-wider">
          {formatDate(operation.data.date)}
        </time>
      </div>

      {operation.data.tags && operation.data.tags.length > 0 && (
        <div class="flex flex-wrap gap-2">
          {operation.data.tags.map((tag) => (
            <span class="text-xs text-fog bg-slate px-3 py-1 border border-slate">
              {tag}
            </span>
          ))}
        </div>
      )}
    </header>

    <!-- Article Content -->
    <article class="prose prose-invert">
      <Content />
    </article>

    <!-- Footer Navigation -->
    <footer class="mt-16 pt-8 border-t border-slate">
      <a
        href="/operations"
        class="inline-flex items-center text-cyan hover:text-cyan-bright transition-colors"
      >
        <svg
          class="w-4 h-4 mr-2"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M15 19l-7-7 7-7"
          />
        </svg>
        Back to Field Operations
      </a>
    </footer>

  </div>
</BaseLayout>
